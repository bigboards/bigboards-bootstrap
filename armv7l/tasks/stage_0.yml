- name: create the directory structures
  file: state=directory path={{cacheDir}}
  with_items:
    - "{{cacheDir}}"
    - "/media/bbfs"

- name: download the rootfs image
  get_url: url={{rootfs}} dest={{cacheDir}}/rootfs.tar.xz force=no

- name: unmount all bound filesystems
  shell: umount -l /media/bbfs{{ item }}
  ignore_errors: yes
  with_items:
    - /sys
    - /proc
    - /dev

- name: unmount all partitions
  shell: umount -t ext4 {{disk.part}}
  ignore_errors: yes

- name: remove all existing partitions
  shell: parted -s {{disk.dev}} mklabel msdos

- name: apply the new layout to the disk
  shell: parted {{disk.dev}} mkpart primary 0% 100%

- name: format the newly created partitions
  shell: mkfs.ext4 -L BBFS {{disk.part}}

- name: be sure uboot is copied to the local filesystem
  get_url: url={{bootloader}} dest={{cacheDir}}/uboot.tar.xz

- name: unpack the bootloader
  shell: tar -xJf {{cacheDir}}/uboot.tar.xz -C {{cacheDir}} creates={{cacheDir}}/wand-uboot

- name: change permissions of the bootloader
  file:
    recurse: 'yes'
    path: '{{cacheDir}}/wand-uboot'
    owner: '1000'
    mode: '755'

- name: be sure the bootloader is installed
  shell: dd if="{{cacheDir}}/wand-uboot/wand-uboot-quad.imx" of={{disk.dev}} bs=512 seek=2

- name: mount the partitions
  shell: mount -t ext4 {{disk.part}} /media/bbfs

- name: remove all files from the rootfs
  shell: rm -rf /media/bbfs/*

- name: be sure the rootfs is unpacked onto the right location
  shell: tar -pxJf {{cacheDir}}/rootfs.tar.xz -C /media/bbfs

- name: remove the existing resolv.conf file from the rootfs
  file:
    path: '/media/bbfs/etc/resolv.conf'
    state: absent

- name: copy the local resolv.conf file to the chroot environment
  copy:
    src: '/etc/resolv.conf'
    dest: '/media/bbfs/etc/resolv.conf'

#- name: chroot - bind mount all the filesystems we need
#  shell: for f in /sys /proc /dev ; do mount --rbind $f /media/bbfs$f ; done
